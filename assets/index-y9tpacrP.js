var X=Object.defineProperty;var Y=(r,t,e)=>t in r?X(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var a=(r,t,e)=>Y(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();document.querySelector("div.window");document.querySelector("div.navbar");const $=document.querySelector("div.terminal-content"),w=document.querySelector("ol.terminal-lines");document.querySelector("div.terminal-input");const v=document.querySelector("div.input-feild"),J=document.querySelector("span.username"),Z=document.querySelector("span.current-directory");class _ extends Error{constructor(e="Node is a file"){super(`NodeIsFileError: ${e}`);a(this,"path");this.path=e,this.name="NodeIsFileError",Object.setPrototypeOf(this,new.target.prototype)}}class ee extends Error{constructor(t="Node is a directory"){super(`NodeIsDirectoryError: Node exits with name ${t} in directory.`),this.name="NodeIsDirectoryError",Object.setPrototypeOf(this,new.target.prototype)}}class I extends Error{constructor(t){super(`NodeWithSameNameExistsError: ${t}`),this.name="NodeWithSameNameExistsError",Object.setPrototypeOf(this,new.target.prototype)}}class M extends Error{constructor(e,o){super(`VariableDoesNotExistsError: ${e}`);a(this,"varName");this.name="VariableDoesNotExistsError",this.varName=o,Object.setPrototypeOf(this,new.target.prototype)}}function U(r){return r.split("/").filter(Boolean)}const V="..",q=".";class f{static createDirectory(t,e,o=!1){if(t.type=="file")throw new _(`${t.name} is a file`);if(t.children.some(l=>l.name===e)&&o==!1)throw new I(e);const n={name:e,parent:t,type:"directory",children:[]};return t.children.push(n),n}static createDirectoryByPath(t,e,o=!1){const s=t.split("/").filter(Boolean);o=!o;let n=e;for(const l of s)n=this.createDirectory(n,l);return n}static createFile(t,e,o="",s=!1){if(t.type=="file")throw new _(`${t.name} is a file`);if(t.children.some(d=>d.name===e)&&s==!1)throw new I(e);const l={name:e,parent:t,content:o,type:"file"};return t.children.push(l),l}static traverseAndList(t,e=1/0,o=0,s=[]){return[t.name,...R(t,e,o,s)]}static getNodeByPath(t,e){let o;return Array.isArray(t)?o=t:o=U(t),te(o,e)}static getPathFromNode(t){const e=[];let o=t;for(;o!=null;)e.push(o.name.trim()),o=o==null?void 0:o.parent;return e.reverse().filter(Boolean).join("/")}}function R(r,t,e=0,o){if(e>t)return o;if(r.type==="file")throw new ee(`${r.name} is a file`);const s="|  ".repeat(e)+"|-- ";for(const n of r.children)n.type==="directory"?(o.push(s+n.name),o=R(n,t,e+1,o)):o.push(s+n.name);return o}function te(r,t){let e=t,o;for(let s of r){if(e.type==="file"||(s===V?o=e.parent:s===q?o=e:o=e.children.find(n=>n.name===s),!o))return;e=o}return e}class m{static userInputPreview(t){return`
        <li class="line">
          <div class="primary-prompt">
                <span class="username">${p.globals.vars.get("username")}</span>
                <span class="current-directory">${f.getPathFromNode(p.globals.fs.currentDirectoryNode)}</span>
          </div>
          <div class="line-content">${t}</div>
        </li>
            `}static standardTerminalOutput(t){return Array.isArray(t)?`<li class="line terminal-output multiline">${t.map(o=>`<div class="line-content">${o}</div>`).join("")}</li>`:`
                <li class="line terminal-output">
                    <div class="line-content">${t}</div>
                </li>
            `}}function W(){J.innerText=p.globals.vars.get("username")||"USERNAME_NOT_SET",Z.innerText=f.getPathFromNode(p.globals.fs.currentDirectoryNode)}function c(r,t){return Array.isArray(r)?r.map(e=>`<span class="${t}">${e}</span>`):`<span class="${t}">${r}</span>`}const T=/\$([^\s]+)/,re=/\\([^\s])/g,C=" ";function P(r){const t=r.split(C).filter(Boolean);for(let e=0;e<t.length;e++)t[e]=t[e].replace(T,(o,s)=>{const n=p.globals.vars.get(s);if(n===void 0)throw new M(s,s);return n});return t.join(C)}function oe(r){return se(r)?(r[2]=P(r[2]),{type:"variable-assignment",tokens:r}):(r=r.map(P),r=r.map(t=>t.replace(re,"$1")),{type:"command",command:r[0].trim(),tokens:r.slice(1)})}function se(r){const t=!!T.exec(r[0]),e=!!/\=/.exec(r[1]);return t&&e}const i={black:"black",red:"red",green_dark:"green_dark",yellow_ochre:"yellow_ochre",blue_light:"blue_light",purple_dark:"purple_dark",green_swamp:"green_swamp",grey_mid:"grey_mid",grey_dark:"grey_dark",orange_warm:"orange_warm",green_pale:"green_pale",yellow_light:"yellow_light",blue_cool:"blue_cool",purple_muted:"purple_muted",teal_bright:"teal_bright"};function S(){$.scrollTop=$.scrollHeight}class u{static printToTerminal(t){w.innerHTML+=t,S()}static clearTerminal(){w.innerHTML=""}static standardErrorOutput(t){w.innerHTML+=m.standardTerminalOutput(t.map(e=>c(e,i.red))),S()}}class B extends Error{constructor(t){super(`VariableValueLengthError: ${t}`),this.name="VariableValueLengthError",Object.setPrototypeOf(this,new.target.prototype)}}class Q extends Error{constructor(t){super(`CommandStartsWithQuotesError: ${t}`),this.name="CommandStartsWithQuotesError",Object.setPrototypeOf(this,new.target.prototype)}}class H extends Error{constructor(t){super(`TokenContainsQuoteInMiddleErrror: ${t}`),this.name="TokenContainsQuoteInMiddleErrror",Object.setPrototypeOf(this,new.target.prototype)}}class z extends Error{constructor(t){super(`CommandContainsUnpairedQuoteError: ${t}`),this.name="CommandContainsUnpairedQuoteError",Object.setPrototypeOf(this,new.target.prototype)}}class ne extends Error{constructor(t){super(`UnexpectedError: ${t}`),this.name="UnexpectedError",Object.setPrototypeOf(this,new.target.prototype)}}class O extends Error{constructor(e){super(`UndefinedCommandError: ${e}`);a(this,"command");this.name="UndefinedCommandError",this.command=e,Object.setPrototypeOf(this,new.target.prototype)}}class y{}const E=/^-{1,2}([^\s]+)/;function b(r){const t=[],e={};for(let o=0;o<r.length;o++)if(E.test(r[o]))if(o+1>=r.length||E.test(r[o+1])){const s=E.exec(r[o])[1];t.push(s),r.splice(o,1),o-=1}else{const s=E.exec(r[o])[1];e[s]=r[o+1],r.splice(o,2),o-=2}return{flags:t,options:e,remainingTokens:r}}class ae extends Error{constructor(e){super(`InvalidFlagError: ${e}`);a(this,"flagName");this.name="InvalidFlagError",this.flagName=e,Object.setPrototypeOf(this,new.target.prototype)}}class ie extends Error{constructor(e){super(`InvalidOptionError: ${e}`);a(this,"optionName");this.optionName=e,this.name="InvalidOptionError",Object.setPrototypeOf(this,new.target.prototype)}}class k extends Error{constructor(e){super(`InvalidColorError: ${e}`);a(this,"color");this.color=e,this.name="InvalidColorError",Object.setPrototypeOf(this,new.target.prototype)}}class j extends Error{constructor(e){super(`InvalidOperationError: ${e}`);a(this,"operation");this.operation=e,this.name="InvalidOperationError",Object.setPrototypeOf(this,new.target.prototype)}}class x extends Error{constructor(e){super(`InvalidNumberError: ${e}`);a(this,"num");this.num=e,this.name="InvalidNumberError",Object.setPrototypeOf(this,new.target.prototype)}}class g extends Error{constructor(e,o){super();a(this,"expected");a(this,"got");this.expected=e,this.got=o,this.name="IncorrectArgumentsCount",Object.setPrototypeOf(this,new.target.prototype)}}class N extends Error{constructor(e){super(`NodeNotFoundError: ${e}`);a(this,"path");this.path=e,this.name="NodeNotFoundError",Object.setPrototypeOf(this,new.target.prototype)}}class D extends Error{constructor(e){super(`InvalidListItemError: ${e}`);a(this,"itemName");this.itemName=e,this.name="InvalidListItemError",Object.setPrototypeOf(this,new.target.prototype)}}class le extends y{constructor(){super(...arguments);a(this,"name","echo");a(this,"flags",["r","reverse"]);a(this,"options",["colors","l","loop"])}execute(e){try{this.__execute(e)}catch(o){this.handleErrors(o)}}info(){return["display a line of text"]}usage(){return["usage: echo [*args] [flags] [options]","","Flags include:",`	${c("r",i.yellow_light)} -> red color to output string`,`	${c("reverse",i.yellow_light)} -> reverse the output string`,"","Options include:",`	${c("color",i.yellow_light)} : Valid colors - ${Object.values(i).join(", ")}`,`	${c("l | loop",i.yellow_light)} : count - how many times to repeat the output (on newlines)`,"Examples:",'	 echo Hello World "my name is divij"	=> Strings can be quoted, unquoted, or a combination',"	 echo $name '$age'			=> Variables can be in quotations or used directly","	 echo $1 --color red -l 10		=> Uses variable $1, red color, and loops 10 times"]}__execute(e){const o=b(e);let s=o.remainingTokens.join(" ");for(let n of o.flags)switch(n){case"r":{s=c(s,i.red);break}case"reverse":{s=[...s].reverse().join("");break}default:throw new ae(n)}for(let n in o.options)switch(n){case"color":{const l=o.options.color;if(!(l in i))throw new k(l);s=c(s,l);break}case"l":case"loop":{const l=Number(o.options.l||o.options.loop);if(console.log(l),Number.isNaN(l))throw new x(o.options.l||o.options.loop);s=new Array(l).fill(s);break}default:throw new ie(n)}u.printToTerminal(m.standardTerminalOutput(s))}handleErrors(e){if(e instanceof k){u.standardErrorOutput([`InvalidColorError: Color (${e.color}) does not exsists`,`valid colors only include ${Object.values(i).join(", ")}`]);return}else if(e instanceof x){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${c(e.num,i.yellow_light)}. Enter a valid number`]);return}else return}}class ce extends y{constructor(){super(...arguments);a(this,"name","help");a(this,"flags",["u","usage","i","info"]);a(this,"options",["cmd"])}execute(e){try{this.__execute(e);return}catch(o){this.handleErrors(o);return}}info(){return["Display information about builtin commands, or used to list all avaialable commands","Options","	--usage | -u	 Shows usage info for provided command "]}usage(){return["help [--cmd] [COMMAND_NAME] [-u | --usage][-i | --info]","eg","	help [--cmd] echo -> info for echo","	help echo --usage -> usage for echo","	help -> lists all avaialable commands"]}__execute(e){const o=b(e);console.log("help");let s;if("cmd"in o.options)console.log("help"),s=o.options.cmd;else{if(o.remainingTokens.length>1)throw new g(1,o.remainingTokens.length);s=o.remainingTokens[0]||"help"}const n=K(s);if(n==null)throw new O(s);const l=new n;if(console.log(o.flags),o.flags.includes("i")||o.flags.includes("info")){console.log("printing info"),u.printToTerminal(m.standardTerminalOutput([...l.info()]));return}else if(o.flags.includes("u")||o.flags.includes("usage")){u.printToTerminal(m.standardTerminalOutput([...l.usage()]));return}else{u.printToTerminal(m.standardTerminalOutput([...l.info(),...l.usage()]));return}}handleErrors(e){if(e instanceof O){u.standardErrorOutput([`UndefinedCommandError: Command ${c(e.command,i.yellow_light)} does not exsits!`]);return}else e instanceof g?u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${c(e.expected.toString(),i.yellow_light)} arguemnts, passed were ${c(e.got.toString(),i.yellow_light)}.`]):u.standardErrorOutput([e.toString()])}}class ue extends y{constructor(){super(...arguments);a(this,"name","clear");a(this,"flags",[]);a(this,"options",[])}execute(e){try{w.innerHTML="",v.value="";return}catch(o){this.handleErrors(o)}}info(){return["clears terminal screen"]}usage(){return["usage: clear"]}handleErrors(e){u.standardErrorOutput(["How even did this command raise an error ???",e.name])}}class de extends y{constructor(){super(...arguments);a(this,"name","math");a(this,"subcommands",["add","sub","mul","div"]);a(this,"flags",[]);a(this,"options",["out","o"])}execute(e){try{this.__execute(e)}catch(o){this.handleErrors(o);return}}info(){return["perform basic arithmetic operations"]}usage(){return["usage: math <subcommand> [*args] [flags] [options]","Subcommands include","	 add -> adds all the given numbers","	 sub -> subtracts subsequent numbers from the first","	 mul -> multiplies all the numbers","	 div -> divides the first number by the second number, takes 2 arguments","Options include","	 -o | --output : assign the result to a variable with the given name","Examples","	 math add 4 5 6 => returns 15","	 math sub 20 5 3 => returns 12","	 math mul 2 3 4 => returns 24","	 math div 100 2 5 => returns 10","	 math add $a $b => supports variable expansion","	 math mul 5 6 -o result => stores result in 'result' variable"]}__execute(e){const o=e.splice(0,1)[0],s=b(e),n=s.remainingTokens.map(d=>{const h=Number(d);if(isNaN(h))throw new x(d);return h});let l;switch(o){case"add":{l=0;for(let d=0;d<n.length;d++)l+=n[d];break}case"sub":{l=0;for(let d=0;d<n.length;d++)l-=n[d];break}case"mul":{l=1;for(let d=0;d<n.length;d++)l*=n[d];break}case"div":{if(n.length>2)throw new g(2,n.length);l=n[0]/n[1];break}default:throw new j(o)}if("out"in s.options||"o"in s.options){const h=s.options.out||s.options.o||"math_result";p.globals.vars.set(h,l.toString()),u.printToTerminal(m.standardTerminalOutput(`Result saved to var ${c(h,i.yellow_light)}.`));return}else{u.printToTerminal(m.standardTerminalOutput(c(l.toString(),i.yellow_light)));return}}handleErrors(e){if(e instanceof x||e.name==="InvalidNumberError"){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${c(e.num,i.yellow_light)}. Enter a valid number`]);return}else e instanceof j?u.standardErrorOutput([`InvalidOperationError: Operation ${c(e.operation,i.yellow_light)} is unsupported.`,`Valid operations include ${c(this.subcommands.join(", "),i.yellow_light)}.`]):e instanceof g&&u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${c(e.expected.toString(),i.yellow_light)} arguemnts, passed were ${c(e.got.toString(),i.yellow_light)}.`])}}class pe extends y{constructor(){super(...arguments);a(this,"name","cd");a(this,"flags",[]);a(this,"options",[])}execute(e){try{this.__execute(e)}catch(o){this.handleErrors(o)}}__execute(e){const o=b(e);if(o.remainingTokens.length!=1)throw new g(1,o.remainingTokens.length);const s=o.remainingTokens[0],n=U(s);let l;if(n[0]===V){const h=p.globals.fs.currentDirectoryNode.parent;if(h===null)throw new N("parent");p.globals.fs.currentDirectoryNode=h,l=h,n.splice(0,1)}else if(n[0]===q)n.splice(0,1),l=p.globals.fs.currentDirectoryNode;else if(s.startsWith(p.globals.fs.root.name)){if(n.length<2){p.globals.fs.currentDirectoryNode=p.globals.fs.root;return}l=p.globals.fs.root,n.splice(0,1),console.log(n)}else l=p.globals.fs.currentDirectoryNode;const d=f.getNodeByPath(n,l);if(d===void 0)throw new N(s);if(d.type==="file")throw new _(s);p.globals.fs.currentDirectoryNode=d}handleErrors(e){if(e instanceof g){u.standardErrorOutput(["IncorrectArgumentsCountError: This command only takes one argument!","Pass any paths with spaces inside quotations!"]);return}else if(e instanceof N){if(e.path==="parent"){u.standardErrorOutput(["NodeNotFoundError: No parent node exists for this directory !.","Current directory could be the root directory ??"]);return}u.standardErrorOutput([`NodeNotFoundError: Cannot cd into directory, ${c(e.path,i.yellow_light)}, no such path exists!`]);return}else if(e instanceof _){u.standardErrorOutput([`NodeIsFileError: Cannot cd to path, ${c(e.path,i.yellow_light)}, target node is a File!`]);return}else{u.standardErrorOutput([`INVALIDERROR: ${e.name}`,e.toString()]);return}}info(){return["change the current working directory"]}usage(){return["usage: cd <path>","","Arguments:","	<path> -> Path to the target directory. Can be relative, absolute, or special symbols ('.' or '..')","","Path formats supported:",`	 ${c(".",i.yellow_light)} -> Refers to the current directory`,`	 ${c("..",i.yellow_light)} -> Refers to the parent directory`,`	 ${c("root/path/to/dir",i.yellow_light)} -> Absolute path starting from root directory`,`	 ${c("some/nested/dir",i.yellow_light)}-> Relative path from current directory`,"","Examples:",`	 ${c("cd .. ",i.blue_light)} => Moves to the parent directory`,`	 ${c("cd . ",i.blue_light)} => Stays in the current directory`,`	 ${c("cd ./ ",i.blue_light)} => Stays in the current directory`,`	 ${c("cd root/Users/Guest ",i.blue_light)} => Moves to absolute path starting from root`,`	 ${c("cd ./root/a/b",i.blue_light)} => Moves to relative path starting from current directory`,`	 ${c("cd projects/alpha",i.blue_light)} => Moves into a subfolder called 'alpha' inside 'projects'`]}}class me extends y{constructor(){super(...arguments);a(this,"name","ls");a(this,"flags",[]);a(this,"options",[])}execute(e){try{this.__execute(e)}catch(o){this.handleErrors(o)}}__execute(e){const o=b(e);if(o.remainingTokens.length!=0)throw new g(0,o.remainingTokens.length);const s=f.traverseAndList(p.globals.fs.currentDirectoryNode);u.printToTerminal(m.standardTerminalOutput(s))}handleErrors(e){u.standardErrorOutput([`UNEXPECTED_ERROR: ${e.name}`,e.toString()])}info(){return["list contents of the current directory"]}usage(){return["usage: ls","","Arguments:","	(none) -> This command does not take any arguments currently.","","Description:","	Lists all files and folders in the current working directory.","	Only the current directory is supported — no paths or flags allowed.","","Examples:",`	${c("ls",i.blue_light)} => Displays all contents of the current directory`]}}class he extends y{constructor(){super(...arguments);a(this,"name","list");a(this,"flags",[]);a(this,"options",[]);a(this,"listables",["commands","listables","colors","variables"])}execute(e){try{const o=b(e);if(o.remainingTokens.length!=1)throw new g(1,o.remainingTokens.length);const s=o.remainingTokens[0];let n;switch(s){case"commands":n=G.keys().toArray();break;case"listables":{n=this.listables;break}case"variables":{n=p.globals.vars.variables.keys().toArray();break}default:throw new D(s)}u.printToTerminal(m.standardTerminalOutput(n));return}catch(o){this.handleErrors(o);return}}handleErrors(e){e instanceof D?u.standardErrorOutput([`InvalidListableItemError: The item ${c(e.itemName,i.yellow_light)} is not listable!`,`use ${c("list listables",i.blue_light)} to view all listable items.`]):e instanceof g&&u.standardErrorOutput([`IncorrectArgumentsCountErrror: This command takes atmost 1 arguments, but pass were ${e.got}`])}info(){return["list various internal items like commands, colors, etc."]}usage(){return["usage: list <item>","","Arguments:","	<item> -> Type of content to list. Only specific keywords are accepted.","","Listable items:",`	${c("listables",i.yellow_light)} -> Lists all valid items that can be passed to 'list'`,`	${c("commands",i.yellow_light)} -> Lists all available shell commands`,`	${c("variables",i.yellow_light)} -> Lists all stored variables.`,"","Examples:",`	${c("list commands",i.blue_light)} => Displays all available commands`,`	${c("list listables",i.blue_light)} => Displays all valid listable categories`]}}const G=new Map([["cd",pe],["clear",ue],["echo",le],["help",ce],["math",de],["ls",me],["list",he]]);function K(r){return G.get(r)}function ge(r){if(r.type=="variable-assignment"&&r.tokens){console.log("va "),fe(r.tokens);return}else if(r.type=="command"&&r.command&&r.tokens){const t=K(r.command);if(t===void 0)throw new O(r.command);new t().execute(r.tokens);return}else throw new ne(r.toString())}function fe(r){if(console.log("in here"),r.length>3)throw new B("");const t=T.exec(r[0])[1],e=r[2];p.globals.vars.set(t,e),u.printToTerminal(m.standardTerminalOutput("variable set"))}function F(r){return new RegExp(`(?<!\\\\)^[\\'\\"]`).test(r)}function ye(r){for(let t=1;t<r.length-1;t++){const e=r[t],o=r[t-1];if((e==='"'||e==="'")&&o!=="\\")return!0}return!1}function A(r){return new RegExp(`(?<!\\\\)[\\'\\"]$`).test(r)}function be(r){let t="",e,o=!0,s=[],n=[];if(F(r))throw new Q(r);const l=r.split(" ").filter(Boolean);for(let d=0;d<l.length;d++){if(t=l[d],e==null&&ye(t))throw new H(t);e==null&&o==!0&&F(t)?(e=t[0],o=!1,A(t)&&t.endsWith(e)?(e=void 0,o=!0,s.push(t.slice(1,-1))):n.push(t.slice(1))):e!=null&&o==!1&&A(t)&&t.endsWith(e)?(e=void 0,o=!0,n.push(t.slice(0,-1)),s.push(n.join(" ")),n=[]):e!=null&&o==!1?n.push(t):s.push(t)}if(o==!1)throw console.log("unpaired quote"),new z(r);return s}class Ee{constructor(t){a(this,"root");a(this,"currentDirectoryNode");this.root=t.initialStructure,this.currentDirectoryNode=this.root}}class we{constructor(t){a(this,"username");this.username=t}}class ve{constructor(t){a(this,"variables");this.variables=t||new Map}get(t){return this.variables.get(t)}set(t,e){this.variables.set(t,e.toString())}}class _e{constructor(){a(this,"fs");a(this,"vars");a(this,"user");this.fs=new Ee({initialStructure:{name:"root",type:"directory",parent:null,children:[]}}),this.user=new we("divij@ubuntu"),this.vars=new ve}}class L{static getUserInput(){return v.innerText}static clearUserInput(){v.innerText=""}}const Oe="true";class xe{constructor(){a(this,"globals");this.globals=new _e,this.globals.vars.set("__debug",Oe),this.globals.vars.set("ping","pong"),this.globals.vars.set("username","divij");const t=f.createDirectoryByPath("/temp/content",this.globals.fs.root);f.createFile(t,"test.txt","Hello World!");const e=f.createDirectoryByPath("/home/",this.globals.fs.root);f.createFile(e,"info.txt","Linux Bash terminal Emulated purely on browser"),console.log(this.globals.fs.root)}process(){const t=L.getUserInput();u.printToTerminal(m.userInputPreview(t)),L.clearUserInput();let e=[];try{e=be(t)}catch(s){$e(s,t);return}let o;try{o=oe(e)}catch(s){Te(s);return}try{ge(o)}catch(s){Ne(s);return}W()}}function Ne(r){r instanceof B||r.name==="VariableValueIsMultipleWords"?u.standardErrorOutput(["VariableValueIsMultipleWords: variables cannot be set values as multiple tokens, pass multiple words in quotations as single token."]):r instanceof O&&u.standardErrorOutput([`UndefinedCommandError: Command ${c(r.command,i.yellow_light)} does not exsits!`])}function Te(r){r instanceof M&&u.standardErrorOutput([`VariableDoesNotExistsError: Variable with name ${r.varName} does not exists !`])}function $e(r,t){if(r instanceof Q){u.standardErrorOutput(["TokenizationError: Command starts with quotations",`${c(t,i.yellow_light)}, cannot start with quotations`]);return}else if(r instanceof H){const e=/(?:\w+\s+)?\w+[\'\"]\w+(?:\s+\w+)?/i.exec(t)[0];u.standardErrorOutput(["TokenizationError: Command contains quote in middle",`Error at ${c(e,i.yellow_light)} in command ${t}`]);return}else if(r instanceof z){u.standardErrorOutput(["TokenizationError: Command contains unpaired quote",c("TODO: BEAUTIFY",i.yellow_light)]);return}else{u.standardErrorOutput(["unexpected error",r]);return}}let p;window.onload=Ie;function Ie(){console.log("starting"),p=new xe,W(),v.addEventListener("keypress",r=>{r.key=="Enter"&&(r.preventDefault(),p.process())})}
