var ee=Object.defineProperty;var te=(o,t,e)=>t in o?ee(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>te(o,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&r(l)}).observe(document,{childList:!0,subtree:!0});function e(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(n){if(n.ep)return;n.ep=!0;const s=e(n);fetch(n.href,s)}})();document.querySelector("div.window");document.querySelector("div.navbar");const A=document.querySelector("div.terminal-content"),_=document.querySelector("ol.terminal-lines");document.querySelector("div.terminal-input");const $=document.querySelector("div.input-feild"),re=document.querySelector("span.username"),oe=document.querySelector("span.current-directory");class T extends Error{constructor(e="Node is a file"){super(`NodeIsFileError: ${e}`);c(this,"path");this.path=e,this.name="NodeIsFileError",Object.setPrototypeOf(this,new.target.prototype)}}class P extends Error{constructor(e="Node is a directory"){super(`NodeIsDirectoryError: Node exits with name ${e} in directory.`);c(this,"path");this.path=e,this.name="NodeIsDirectoryError",Object.setPrototypeOf(this,new.target.prototype)}}class v extends Error{constructor(e){super(`NodeWithSameNameExistsError: ${name}`);c(this,"path");this.name="NodeWithSameNameExistsError",this.path=e,Object.setPrototypeOf(this,new.target.prototype)}}class B extends Error{constructor(e){super(`NodeToRemoveIsADirectoryAndNoRecurseFlagIsProvidedError: ${e}`);c(this,"path");this.path=e,this.name="NodeToRemoveIsADirectoryAndNoRecurseFlagIsProvidedError",Object.setPrototypeOf(this,new.target.prototype)}}class W extends Error{constructor(e,r){super(`VariableDoesNotExistsError: ${e}`);c(this,"varName");this.name="VariableDoesNotExistsError",this.varName=r,Object.setPrototypeOf(this,new.target.prototype)}}const C=/\$([^\s]+)/,ne=/\\([^\s])/g,S=" ";function D(o){const t=o.split(S).filter(Boolean);for(let e=0;e<t.length;e++)t[e]=t[e].replace(C,(r,n)=>{const s=h.globals.vars.get(n);if(s===void 0)throw new W(n,n);return s});return t.join(S)}function se(o){return ie(o)?(o[2]=D(o[2]),{type:"variable-assignment",tokens:o}):(o=o.map(D),o=o.map(t=>t.replace(ne,"$1")),{type:"command",command:o[0].trim(),tokens:o.slice(1)})}function ie(o){const t=!!C.exec(o[0]),e=!!/\=/.exec(o[1]);return t&&e}class ae extends Error{constructor(e){super(`InvalidFlagError: ${e}`);c(this,"flagName");this.name="InvalidFlagError",this.flagName=e,Object.setPrototypeOf(this,new.target.prototype)}}class le extends Error{constructor(e){super(`InvalidOptionError: ${e}`);c(this,"optionName");this.optionName=e,this.name="InvalidOptionError",Object.setPrototypeOf(this,new.target.prototype)}}class F extends Error{constructor(e){super(`InvalidColorError: ${e}`);c(this,"color");this.color=e,this.name="InvalidColorError",Object.setPrototypeOf(this,new.target.prototype)}}class L extends Error{constructor(e){super(`InvalidOperationError: ${e}`);c(this,"operation");this.operation=e,this.name="InvalidOperationError",Object.setPrototypeOf(this,new.target.prototype)}}class E extends Error{constructor(e){super(`InvalidNumberError: ${e}`);c(this,"num");this.num=e,this.name="InvalidNumberError",Object.setPrototypeOf(this,new.target.prototype)}}class m extends Error{constructor(e,r){super();c(this,"expected");c(this,"got");this.expected=e,this.got=r,this.name="IncorrectArgumentsCount",Object.setPrototypeOf(this,new.target.prototype)}}class w extends Error{constructor(e){super(`NodeNotFoundError: ${e}`);c(this,"path");this.path=e,this.name="NodeNotFoundError",Object.setPrototypeOf(this,new.target.prototype)}}class M extends Error{constructor(e){super(`InvalidListItemError: ${e}`);c(this,"itemName");this.itemName=e,this.name="InvalidListItemError",Object.setPrototypeOf(this,new.target.prototype)}}function O(o){return o.split("/").filter(Boolean)}function ce(o){return o.join("/")}const Q="..",H=".";class p{static createDirectory(t,e,r=!1){if(t.type=="file")throw new T(`${t.name} is a file`);if(t.children.some(l=>l.name===e)&&r==!1)throw new v(e);const s={name:e,parent:t,type:"directory",children:[]};return t.children.push(s),s}static createDirectoryByPath(t,e,r){let n,s,l;typeof t=="object"&&"path"in t&&"root"in t?(n=t.root,s=t.path,l=e):(n=e,s=O(t),l=r);let d;for(let g=0;g<s.length;g++){if(d=n.children.findIndex(j=>j.name===s[g]&&j.type==="directory"),d!==-1){if(!l)throw new v(ce(s.slice(0,g)));n.children.splice(d,1)}n=p.createDirectory(n,s[g],l)}return n}static deleteNodeByPath(t,e,r=!1){const n=this.getNodeByPath(t,e);if(n===void 0)throw new w(t);if(n.type==="directory"&&r==!1)throw new B(t);if(n.parent==null)throw new w("parent");const s=n.parent,l=s.children.findIndex(d=>d.name===n.name);s.children.splice(l,1)}static createFile(t,e,r="",n=!1){if(t.type=="file")throw new T(`${t.name} is a file`);if(t.children.some(d=>d.name===e)&&n==!1)throw new v(e);const l={name:e,parent:t,content:r,type:"file"};return t.children.push(l),l}static traverseAndList(t,e=1/0){return typeof t=="object"&&"root"in t&&"path"in t?[t.root.name,...k(t.root,e,0,[])]:[t.name,...k(t,e,0,[])]}static getNodeByPath(t,e){let r,n;return typeof t=="object"&&"path"in t&&"root"in t?(r=Array.isArray(t.path)?t.path:O(t.path),n=t.root):Array.isArray(t)?(r=t,n=e):(r=O(t),n=e),ue(r,n)}static getPathFromNode(t){const e=[];let r=t;for(;r!=null;)e.push(r.name.trim()),r=r==null?void 0:r.parent;return e.reverse().filter(Boolean).join("/")}}function k(o,t,e=0,r){if(e>=t)return r;if(o.type==="file")throw new P(`${o.name} is a file`);const n="|  ".repeat(e)+"|-- ";for(const s of o.children)s.type==="directory"?(r.push(n+s.name),r=k(s,t,e+1,r)):r.push(n+s.name);return r}function ue(o,t){let e=t,r;for(let n of o){if(e.type==="file"||(n===Q?r=e.parent:n===H?r=e:r=e.children.find(s=>s.name===n),!r))return;e=r}return e}class f{static userInputPreview(t){return`
        <li class="line">
          <div class="primary-prompt">
                <span class="username">${h.globals.vars.get("&&username")}</span>
                <span class="current-directory">${p.getPathFromNode(h.globals.fs.currentDirectoryNode)}</span>
          </div>
          <div class="line-content">${t}</div>
        </li>
            `}static standardTerminalOutput(t){return Array.isArray(t)?`<li class="line terminal-output multiline">${t.map(r=>`<div class="line-content">${r}</div>`).join("")}</li>`:`
                <li class="line terminal-output">
                    <div class="line-content">${t}</div>
                </li>
            `}}function z(){re.innerText=h.globals.vars.get("&&username")||"USERNAME_NOT_SET",oe.innerText=p.getPathFromNode(h.globals.fs.currentDirectoryNode)}function a(o,t){return Array.isArray(o)?o.map(e=>`<span class="${t}">${e}</span>`):`<span class="${t}">${o}</span>`}const i={black:"black",red:"red",green_dark:"green_dark",yellow_ochre:"yellow_ochre",blue_light:"blue_light",purple_dark:"purple_dark",green_swamp:"green_swamp",grey_mid:"grey_mid",grey_dark:"grey_dark",orange_warm:"orange_warm",green_pale:"green_pale",yellow_light:"yellow_light",blue_cool:"blue_cool",purple_muted:"purple_muted",teal_bright:"teal_bright"};function R(){A.scrollTop=A.scrollHeight}class u{static printToTerminal(t){_.innerHTML+=t,R()}static clearTerminal(){_.innerHTML=""}static standardErrorOutput(t){_.innerHTML+=f.standardTerminalOutput(t.map(e=>a(e,i.red))),R()}}class G extends Error{constructor(t){super(`VariableValueLengthError: ${t}`),this.name="VariableValueLengthError",Object.setPrototypeOf(this,new.target.prototype)}}class K extends Error{constructor(t){super(`CommandStartsWithQuotesError: ${t}`),this.name="CommandStartsWithQuotesError",Object.setPrototypeOf(this,new.target.prototype)}}class Y extends Error{constructor(t){super(`TokenContainsQuoteInMiddleErrror: ${t}`),this.name="TokenContainsQuoteInMiddleErrror",Object.setPrototypeOf(this,new.target.prototype)}}class J extends Error{constructor(t){super(`CommandContainsUnpairedQuoteError: ${t}`),this.name="CommandContainsUnpairedQuoteError",Object.setPrototypeOf(this,new.target.prototype)}}class de extends Error{constructor(t){super(`UnexpectedError: ${t}`),this.name="UnexpectedError",Object.setPrototypeOf(this,new.target.prototype)}}class N extends Error{constructor(e){super(`UndefinedCommandError: ${e}`);c(this,"command");this.name="UndefinedCommandError",this.command=e,Object.setPrototypeOf(this,new.target.prototype)}}class y{}const x=/^-{1,2}([^\s]+)/;function b(o){const t=[],e={};for(let r=0;r<o.length;r++)if(x.test(o[r]))if(r+1>=o.length||x.test(o[r+1])){const n=x.exec(o[r])[1];t.push(n),o.splice(r,1),r-=1}else{const n=x.exec(o[r])[1];e[n]=o[r+1],o.splice(r,2),r-=2}return{flags:t,options:e,remainingTokens:o}}class he extends y{constructor(){super(...arguments);c(this,"name","echo");c(this,"flags",["r","reverse"]);c(this,"options",["colors","l","loop"])}execute(e){try{this.__execute(e)}catch(r){this.handleErrors(r)}}info(){return["display a line of text"]}usage(){return["usage: echo [*args] [flags] [options]","","Flags include:",`	${a("r",i.yellow_light)} -> red color to output string`,`	${a("reverse",i.yellow_light)} -> reverse the output string`,"","Options include:",`	${a("color",i.yellow_light)} : Valid colors - ${Object.values(i).join(", ")}`,`	${a("l | loop",i.yellow_light)} : count - how many times to repeat the output (on newlines)`,"Examples:",'	 echo Hello World "my name is divij"	=> Strings can be quoted, unquoted, or a combination',"	 echo $name '$age'			=> Variables can be in quotations or used directly","	 echo $1 --color red -l 10		=> Uses variable $1, red color, and loops 10 times"]}__execute(e){const r=b(e);let n=r.remainingTokens.join(" ");for(let s of r.flags)switch(s){case"r":{n=a(n,i.red);break}case"reverse":{n=[...n].reverse().join("");break}default:throw new ae(s)}for(let s in r.options)switch(s){case"color":{const l=r.options.color;if(!(l in i))throw new F(l);n=a(n,l);break}case"l":case"loop":{const l=Number(r.options.l||r.options.loop);if(console.log(l),Number.isNaN(l))throw new E(r.options.l||r.options.loop);n=new Array(l).fill(n);break}default:throw new le(s)}u.printToTerminal(f.standardTerminalOutput(n))}handleErrors(e){if(e instanceof F){u.standardErrorOutput([`InvalidColorError: Color (${e.color}) does not exsists`,`valid colors only include ${Object.values(i).join(", ")}`]);return}else if(e instanceof E){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${a(e.num,i.yellow_light)}. Enter a valid number`]);return}else return}}class pe extends y{constructor(){super(...arguments);c(this,"name","help");c(this,"flags",["u","usage","i","info"]);c(this,"options",["cmd"])}execute(e){try{this.__execute(e);return}catch(r){this.handleErrors(r);return}}info(){return["Display information about builtin commands, or used to list all avaialable commands","Options","	--usage | -u	 Shows usage info for provided command "]}usage(){return["help [--cmd] [COMMAND_NAME] [-u | --usage][-i | --info]","eg","	help [--cmd] echo -> info for echo","	help echo --usage -> usage for echo","	help -> lists all avaialable commands"]}__execute(e){const r=b(e);console.log("help");let n;if("cmd"in r.options)console.log("help"),n=r.options.cmd;else{if(r.remainingTokens.length>1)throw new m(1,r.remainingTokens.length);n=r.remainingTokens[0]||"help"}const s=Z(n);if(s==null)throw new N(n);const l=new s;if(console.log(r.flags),r.flags.includes("i")||r.flags.includes("info")){console.log("printing info"),u.printToTerminal(f.standardTerminalOutput([...l.info()]));return}else if(r.flags.includes("u")||r.flags.includes("usage")){u.printToTerminal(f.standardTerminalOutput([...l.usage()]));return}else{u.printToTerminal(f.standardTerminalOutput([...l.info(),...l.usage()]));return}}handleErrors(e){if(e instanceof N){u.standardErrorOutput([`UndefinedCommandError: Command ${a(e.command,i.yellow_light)} does not exsits!`]);return}else e instanceof m?u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${a(e.expected.toString(),i.yellow_light)} arguemnts, passed were ${a(e.got.toString(),i.yellow_light)}.`]):u.standardErrorOutput([e.toString()])}}class me extends y{constructor(){super(...arguments);c(this,"name","clear");c(this,"flags",[]);c(this,"options",[])}execute(e){try{_.innerHTML="",$.value="";return}catch(r){this.handleErrors(r)}}info(){return["clears terminal screen"]}usage(){return["usage: clear"]}handleErrors(e){u.standardErrorOutput(["How even did this command raise an error ???",e.name])}}class fe extends y{constructor(){super(...arguments);c(this,"name","math");c(this,"subcommands",["add","sub","mul","div"]);c(this,"flags",[]);c(this,"options",["out","o"])}execute(e){try{this.__execute(e)}catch(r){this.handleErrors(r);return}}info(){return["perform basic arithmetic operations"]}usage(){return["usage: math <subcommand> [*args] [flags] [options]","Subcommands include","	 add -> adds all the given numbers","	 sub -> subtracts subsequent numbers from the first","	 mul -> multiplies all the numbers","	 div -> divides the first number by the second number, takes 2 arguments","Options include","	 -o | --output : assign the result to a variable with the given name","Examples","	 math add 4 5 6 => returns 15","	 math sub 20 5 3 => returns 12","	 math mul 2 3 4 => returns 24","	 math div 100 2 5 => returns 10","	 math add $a $b => supports variable expansion","	 math mul 5 6 -o result => stores result in 'result' variable"]}__execute(e){const r=e.splice(0,1)[0],n=b(e),s=n.remainingTokens.map(d=>{const g=Number(d);if(isNaN(g))throw new E(d);return g});let l;switch(r){case"add":{l=0;for(let d=0;d<s.length;d++)l+=s[d];break}case"sub":{l=0;for(let d=0;d<s.length;d++)l-=s[d];break}case"mul":{l=1;for(let d=0;d<s.length;d++)l*=s[d];break}case"div":{if(s.length>2)throw new m(2,s.length);l=s[0]/s[1];break}default:throw new L(r)}if("out"in n.options||"o"in n.options){const g=n.options.out||n.options.o||"math_result";h.globals.vars.set(g,l.toString()),u.printToTerminal(f.standardTerminalOutput(`Result saved to var ${a(g,i.yellow_light)}.`));return}else{u.printToTerminal(f.standardTerminalOutput(a(l.toString(),i.yellow_light)));return}}handleErrors(e){if(e instanceof E||e.name==="InvalidNumberError"){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${a(e.num,i.yellow_light)}. Enter a valid number`]);return}else e instanceof L?u.standardErrorOutput([`InvalidOperationError: Operation ${a(e.operation,i.yellow_light)} is unsupported.`,`Valid operations include ${a(this.subcommands.join(", "),i.yellow_light)}.`]):e instanceof m&&u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${a(e.expected.toString(),i.yellow_light)} arguemnts, passed were ${a(e.got.toString(),i.yellow_light)}.`])}}function I(o,t){const e=O(o);if(e[0]===Q){const r=t.parent;if(r===null)throw new w("parent");return e.splice(0,1),{root:r,path:e}}else return o[0]===H?(e.splice(0,1),{root:t,path:e}):o.startsWith(h.globals.fs.root.name)?(e.splice(0,1),{root:h.globals.fs.root,path:e}):{root:t,path:e}}class ge extends y{constructor(){super(...arguments);c(this,"name","cd");c(this,"flags",[]);c(this,"options",[])}execute(e){try{this.__execute(e)}catch(r){this.handleErrors(r)}}__execute(e){const r=b(e);if(r.remainingTokens.length!=1)throw new m(1,r.remainingTokens.length);const n=r.remainingTokens[0],s=I(n,h.globals.fs.currentDirectoryNode),l=p.getNodeByPath(s);if(l===void 0)throw new w(n);if(l.type==="file")throw new T(n);h.globals.fs.currentDirectoryNode=l}handleErrors(e){if(e instanceof m){u.standardErrorOutput(["IncorrectArgumentsCountError: This command only takes one argument!","Pass any paths with spaces inside quotations!"]);return}else if(e instanceof w){if(e.path==="parent"){u.standardErrorOutput(["NodeNotFoundError: No parent node exists for this directory !.","Current directory could be the root directory ??"]);return}u.standardErrorOutput([`NodeNotFoundError: Cannot cd into directory, ${a(e.path,i.yellow_light)}, no such path exists!`]);return}else if(e instanceof T){u.standardErrorOutput([`NodeIsFileError: Cannot cd to path, ${a(e.path,i.yellow_light)}, target node is a File!`]);return}else{u.standardErrorOutput([`INVALIDERROR: ${e.name}`,e.toString()]);return}}info(){return["change the current working directory"]}usage(){return["usage: cd <path>","","Arguments:","	<path> -> Path to the target directory. Can be relative, absolute, or special symbols ('.' or '..')","","Path formats supported:",`	 ${a(".",i.yellow_light)} -> Refers to the current directory`,`	 ${a("..",i.yellow_light)} -> Refers to the parent directory`,`	 ${a("root/path/to/dir",i.yellow_light)} -> Absolute path starting from root directory`,`	 ${a("some/nested/dir",i.yellow_light)}-> Relative path from current directory`,"","Examples:",`	 ${a("cd .. ",i.blue_light)} => Moves to the parent directory`,`	 ${a("cd . ",i.blue_light)} => Stays in the current directory`,`	 ${a("cd ./ ",i.blue_light)} => Stays in the current directory`,`	 ${a("cd root/Users/Guest ",i.blue_light)} => Moves to absolute path starting from root`,`	 ${a("cd ./root/a/b",i.blue_light)} => Moves to relative path starting from current directory`,`	 ${a("cd projects/alpha",i.blue_light)} => Moves into a subfolder called 'alpha' inside 'projects'`]}}class ye extends y{constructor(){super(...arguments);c(this,"name","ls");c(this,"flags",[]);c(this,"options",["d","depth"])}execute(e){try{this.__execute(e)}catch(r){this.handleErrors(r)}}__execute(e){const r=b(e);if(r.remainingTokens.length>=2)throw new m("0 or 1",r.remainingTokens.length);const n=r.remainingTokens[0]||".",s=I(n,h.globals.fs.currentDirectoryNode);let l=r.options.depth||r.options.d||"1";if(l==="inf")l=1/0;else if(l=parseInt(l),!Number.isInteger(l))throw new E(l.toString());const d=p.traverseAndList(s,l);u.printToTerminal(f.standardTerminalOutput(d))}handleErrors(e){e instanceof E?u.standardErrorOutput([`InvalidNumberError: Error in parsing ${a(e.num,i.yellow_light)}. Enter a valid number`]):e instanceof m&&u.standardErrorOutput(["IncorrectArgumentsCountError: This command only takes one argument!","Pass any paths with spaces inside quotations!"])}info(){return["list contents of the current directory"]}usage(){return["usage: ls","","Arguments:","	(none) -> This command does not take any arguments currently.","","Description:","	Lists all files and folders in the current working directory.","	Only the current directory is supported — no paths or flags allowed.","","Examples:",`	${a("ls",i.blue_light)} => Displays all contents of the current directory`]}}class be extends y{constructor(){super(...arguments);c(this,"name","list");c(this,"flags",[]);c(this,"options",[]);c(this,"listables",["commands","listables","colors","variables"])}execute(e){try{const r=b(e);if(r.remainingTokens.length!=1)throw new m(1,r.remainingTokens.length);const n=r.remainingTokens[0];let s;switch(n){case"commands":s=X.keys().toArray();break;case"listables":{s=this.listables;break}case"variables":{s=h.globals.vars.variables.keys().toArray();break}case"colors":{s=Object.keys(Object(i));break}default:throw new M(n)}u.printToTerminal(f.standardTerminalOutput(s));return}catch(r){this.handleErrors(r);return}}handleErrors(e){e instanceof M?u.standardErrorOutput([`InvalidListableItemError: The item ${a(e.itemName,i.yellow_light)} is not listable!`,`use ${a("list listables",i.blue_light)} to view all listable items.`]):e instanceof m&&u.standardErrorOutput([`IncorrectArgumentsCountErrror: This command takes atmost 1 arguments, but pass were ${e.got}`])}info(){return["list various internal items like commands, colors, etc."]}usage(){return["usage: list <item>","","Arguments:","	<item> -> Type of content to list. Only specific keywords are accepted.","","Listable items:",`	${a("listables",i.yellow_light)} -> Lists all valid items that can be passed to 'list'`,`	${a("commands",i.yellow_light)} -> Lists all available shell commands`,`	${a("variables",i.yellow_light)} -> Lists all stored variables.`,"","Examples:",`	${a("list commands",i.blue_light)} => Displays all available commands`,`	${a("list listables",i.blue_light)} => Displays all valid listable categories`]}}class we extends y{constructor(){super(...arguments);c(this,"name","mkdir");c(this,"flags",[]);c(this,"options",[])}execute(e){try{this.__execute(e)}catch(r){this.handleErrors(r)}}handleErrors(e){if(e instanceof m){u.standardErrorOutput(["IncorrectArgumentsCountError: This command only takes one argument!","Pass any paths with spaces inside quotations!"]);return}e instanceof v&&u.standardErrorOutput([`NodeWithSameNameExistsError: A directory already exists at path ${a(e.path,i.yellow_light)}.`,`To overwrite existing directory, use the ${a("-f",i.blue_light)} flag.`])}__execute(e){const r=b(e);if(r.remainingTokens.length!=1)throw new m(1,r.remainingTokens.length);const n=I(r.remainingTokens[0],h.globals.fs.currentDirectoryNode);if(p.getNodeByPath(n)!==void 0)throw new v(r.remainingTokens[0]);let l;r.flags.includes("f")?l=p.createDirectoryByPath(n,!0):l=p.createDirectoryByPath(n,!1),(r.flags.includes("c")||r.flags.includes("cd"))&&(h.globals.fs.currentDirectoryNode=l)}info(){return["list contents of a directory with optional depth"]}usage(){return["usage: ls [path] [options]","","Arguments:",`	${a("[path]",i.yellow_light)} -> Optional. Path to the directory to list. Defaults to current directory if omitted.`,"","Options:",`	${a("--depth",i.yellow_light)}, ${a("-d",i.yellow_light)} : Optional. How deep to traverse the directory tree.`,`								  Accepts a number or the keyword ${a("inf",i.yellow_light)}.`,"","Examples:",`	${a("ls",i.blue_light)} => Lists contents of the current directory`,`	${a("ls ./docs",i.blue_light)} => Lists contents of the 'docs' directory`,`	${a("ls -d 2",i.blue_light)} => Lists contents of the current directory up to depth 2`,`	${a("ls root/projects -d inf",i.blue_light)} => Recursively lists everything under 'root/projects'`]}}class Ee extends y{constructor(){super(...arguments);c(this,"name","rm");c(this,"flags",["r"]);c(this,"options",[])}execute(e){try{const r=b(e),n=r.flags.includes("r");p.deleteNodeByPath(r.remainingTokens[0],h.globals.fs.currentDirectoryNode,n)}catch(r){r instanceof B?u.standardErrorOutput(["Target node is a directory and no recurse flag was used, skipping delete",`Use ${a("-r",i.blue_light)} flag to remove directories.`]):r instanceof w&&u.standardErrorOutput([`No node found at path ${r.path}`])}}handleErrors(e){}info(){return["delete a file or directory from the filesystem"]}usage(){return["usage: rm <path> [flags]","","Arguments:",`	${a("<path>",i.yellow_light)} -> Path to the file or directory to delete.`,"","Flags:",`	${a("-r",i.yellow_light)} -> Recursively deletes a directory and its contents.`,"			   Must be used if the target is a directory.","","Examples:",`	${a("rm hello.txt",i.blue_light)} => Deletes the file 'hello.txt' from the current directory`,`	${a("rm root/data/file.json",i.blue_light)} => Deletes the file at the given absolute path`,`	${a("rm ./projects",i.blue_light)} => Fails if 'projects' is a directory (no -r flag used)`,`	${a("rm ./projects -r",i.blue_light)} => Recursively deletes the 'projects' directory and its contents`]}}class ve extends y{constructor(){super(...arguments);c(this,"name","cat");c(this,"flags",[]);c(this,"options",[])}execute(e){try{const r=b(e);if(r.remainingTokens.length!=1)throw new m(1,r.remainingTokens.length);const n=r.remainingTokens[0],s=I(n,h.globals.fs.currentDirectoryNode),l=p.getNodeByPath(s);if(l===void 0)throw new w(n);if(l.type==="directory")throw new P(n);const d=l.content;u.printToTerminal(f.standardTerminalOutput(d))}catch(r){this.handleErrors(r)}}handleErrors(e){e instanceof m?u.standardErrorOutput([`IncorrectArgumentsCountError: This command takes ${e.expected} argument but passed were ${e.got}!`,"Pass any paths with spaces inside quotations!"]):e instanceof P&&u.standardErrorOutput([`Cannot show content of node at ${e.path}! Path refers to a directory.`])}info(){return["print the contents of a file to the terminal"]}usage(){return["usage: cat <path>","","Arguments:","	<path> -> Path to the target file. Can be relative or absolute.","","Path formats supported:",`	${a(".",i.yellow_light)} / ${a("..",i.yellow_light)} -> For self and parent directory traversal`,`	${a("#/path/to/file.txt",i.yellow_light)} -> Absolute path starting from root`,`	${a("some/nested/file.txt",i.yellow_light)} -> Relative path from current directory`,"","Examples:",`	${a("cat hello.txt",i.blue_light)} => Prints contents of 'hello.txt' in the current directory`,`	${a("cat ./docs/readme.md",i.blue_light)} => Prints contents of file at relative path './docs/readme.md'`,`	${a("cat #/files/data.json",i.blue_light)} => Prints contents of absolute path 'root/files/data.json'`]}}const X=new Map([["cat",ve],["cd",ge],["clear",me],["echo",he],["help",pe],["math",fe],["mkdir",we],["ls",ye],["list",be],["rm",Ee]]);function Z(o){return X.get(o)}function xe(o){if(o.type=="variable-assignment"&&o.tokens){console.log("va "),_e(o.tokens);return}else if(o.type=="command"&&o.command&&o.tokens){const t=Z(o.command);if(t===void 0)throw new N(o.command);new t().execute(o.tokens);return}else throw new de(o.toString())}function _e(o){if(console.log("in here"),o.length>3)throw new G("");const t=C.exec(o[0])[1],e=o[2];h.globals.vars.set(t,e),u.printToTerminal(f.standardTerminalOutput("variable set"))}function q(o){return new RegExp(`(?<!\\\\)^[\\'\\"]`).test(o)}function Oe(o){for(let t=1;t<o.length-1;t++){const e=o[t],r=o[t-1];if((e==='"'||e==="'")&&r!=="\\")return!0}return!1}function U(o){return new RegExp(`(?<!\\\\)[\\'\\"]$`).test(o)}function $e(o){let t="",e,r=!0,n=[],s=[];if(q(o))throw new K(o);const l=o.split(" ").filter(Boolean);for(let d=0;d<l.length;d++){if(t=l[d],e==null&&Oe(t))throw new Y(t);e==null&&r==!0&&q(t)?(e=t[0],r=!1,U(t)&&t.endsWith(e)?(e=void 0,r=!0,n.push(t.slice(1,-1))):s.push(t.slice(1))):e!=null&&r==!1&&U(t)&&t.endsWith(e)?(e=void 0,r=!0,s.push(t.slice(0,-1)),n.push(s.join(" ")),s=[]):e!=null&&r==!1?s.push(t):n.push(t)}if(r==!1)throw console.log("unpaired quote"),new J(o);return n}class Te{constructor(t){c(this,"root");c(this,"currentDirectoryNode");this.root=t.initialStructure,this.currentDirectoryNode=this.root}}class Ne{constructor(t){c(this,"username");this.username=t}}class Ie{constructor(t){c(this,"variables");this.variables=t||new Map}get(t){return this.variables.get(t)}set(t,e){this.variables.set(t,e.toString())}}class Pe{constructor(){c(this,"fs");c(this,"vars");c(this,"user");this.fs=new Te({initialStructure:{name:"#",type:"directory",parent:null,children:[]}}),this.user=new Ne("divij@ubuntu"),this.vars=new Ie}}class V{static getUserInput(){return $.innerText}static clearUserInput(){$.innerText=""}}class ke{constructor(){c(this,"globals");this.globals=new Pe}process(){const t=V.getUserInput();u.printToTerminal(f.userInputPreview(t)),V.clearUserInput();let e=[];try{e=$e(t)}catch(n){Ae(n,t);return}let r;try{r=se(e)}catch(n){je(n);return}try{xe(r)}catch(n){Ce(n);return}z()}}function Ce(o){o instanceof G||o.name==="VariableValueIsMultipleWords"?u.standardErrorOutput(["VariableValueIsMultipleWords: variables cannot be set values as multiple tokens, pass multiple words in quotations as single token."]):o instanceof N&&u.standardErrorOutput([`UndefinedCommandError: Command ${a(o.command,i.yellow_light)} does not exsits!`])}function je(o){o instanceof W&&u.standardErrorOutput([`VariableDoesNotExistsError: Variable with name ${o.varName} does not exists !`])}function Ae(o,t){if(o instanceof K){u.standardErrorOutput(["TokenizationError: Command starts with quotations",`${a(t,i.yellow_light)}, cannot start with quotations`]);return}else if(o instanceof Y){const e=/(?:\w+\s+)?\w+[\'\"]\w+(?:\s+\w+)?/i.exec(t)[0];u.standardErrorOutput(["TokenizationError: Command contains quote in middle",`Error at ${a(e,i.yellow_light)} in command ${t}`]);return}else if(o instanceof J){u.standardErrorOutput(["TokenizationError: Command contains unpaired quote",a("TODO: BEAUTIFY",i.yellow_light)]);return}else{u.standardErrorOutput(["unexpected error",o]);return}}function Se(){h.globals.vars.set("ping","pong"),h.globals.vars.set("&&username","divij");const o=p.createDirectoryByPath("/temp/content",h.globals.fs.root,!1),t=p.createDirectoryByPath("/home/",h.globals.fs.root,!1);p.createFile(t,"info.txt","Linux Bash terminal Emulated purely on browser"),p.createFile(o,"test.txt","Hello World!"),z()}let h;window.onload=De;function De(){console.log("starting"),h=new ke,Se(),$.addEventListener("keypress",o=>{o.key=="Enter"&&(o.preventDefault(),h.process())})}
