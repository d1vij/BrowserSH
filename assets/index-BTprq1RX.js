var B=Object.defineProperty;var Q=(r,e,t)=>e in r?B(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var a=(r,e,t)=>Q(r,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();document.querySelector("div.window");document.querySelector("div.navbar");document.querySelector("div.terminal-content");const f=document.querySelector("ol.terminal-lines");document.querySelector("div.terminal-input");const E=document.querySelector("div.input-feild"),W=document.querySelector("span.username"),H=document.querySelector("span.current-directory");class p{static userInputPreview(e){return`
        <li class="line">
          <div class="primary-prompt">
          <span class="username">${m.globals.vars.get("username")}</span>
          <span class="current-directory">${m.globals.fs.currentDirectory}</span>
            <div class="line-content">${e}</div>
            </li>
            `}static standardTerminalOutput(e){return Array.isArray(e)?`<li class="line terminal-output multiline">${e.map(o=>`<div class="line-content">${o}</div>`).join("")}</li>`:`
                <li class="line terminal-output">
                    <div class="line-content">${e}</div>
                </li>
            `}}function _(){W.innerText=m.globals.vars.get("username")||"USERNAME_NOT_SET",H.innerText=m.globals.fs.currentDirectory}function c(r,e){return Array.isArray(r)?r.map(t=>`<span class="${e}">${t}</span>`):`<span class="${e}">${r}</span>`}class I extends Error{constructor(e="Node is a file"){super(`NodeIsFileError: ${e}`),this.name="NodeIsFileError",Object.setPrototypeOf(this,new.target.prototype)}}class R extends Error{constructor(e="Node is a directory"){super(`NodeIsDirectoryError: Node exits with name ${e} in directory.`),this.name="NodeIsDirectoryError",Object.setPrototypeOf(this,new.target.prototype)}}class $ extends Error{constructor(e){super(`NodeWithSameNameExistsError: ${e}`),this.name="NodeWithSameNameExistsError",Object.setPrototypeOf(this,new.target.prototype)}}class k extends Error{constructor(t,o){super(`VariableDoesNotExistsError: ${t}`);a(this,"varName");this.name="VariableDoesNotExistsError",this.varName=o,Object.setPrototypeOf(this,new.target.prototype)}}const T=/\$([^\s]+)/,z=/\\([^\s])/g,C=" ";function S(r){const e=r.split(C).filter(Boolean);for(let t=0;t<e.length;t++)e[t]=e[t].replace(T,(o,n)=>{const s=m.globals.vars.get(n);if(s===void 0)throw new k(n,n);return s});return e.join(C)}function G(r){return K(r)?(r[2]=S(r[2]),{type:"variable-assignment",tokens:r}):(r=r.map(S),r=r.map(e=>e.replace(z,"$1")),console.log(r),{type:"command",command:r[0].trim(),tokens:r.slice(1)})}function K(r){const e=!!T.exec(r[0]),t=!!/\=/.exec(r[1]);return e&&t}const l={black:"black",red:"red",green_dark:"green_dark",yellow_ochre:"yellow_ochre",blue_light:"blue_light",purple_dark:"purple_dark",green_swamp:"green_swamp",grey_mid:"grey_mid",grey_dark:"grey_dark",orange_warm:"orange_warm",green_pale:"green_pale",yellow_light:"yellow_light",blue_cool:"blue_cool",purple_muted:"purple_muted",teal_bright:"teal_bright"};class u{static printToTerminal(e){f.innerHTML+=e}static clearTerminal(){f.innerHTML=""}static commandNotFoundError(e){const t=c(`-${e} : command not found`,l.red);f.innerHTML+=p.standardTerminalOutput(t)}static standardErrorOutput(e){f.innerHTML+=p.standardTerminalOutput(e.map(t=>c(t,l.red)))}}class x extends Error{constructor(e){super(`VariableValueLengthError: ${e}`),this.name="VariableValueLengthError",Object.setPrototypeOf(this,new.target.prototype)}}class A extends Error{constructor(e){super(`CommandStartsWithQuotesError: ${e}`),this.name="CommandStartsWithQuotesError",Object.setPrototypeOf(this,new.target.prototype)}}class U extends Error{constructor(e){super(`TokenContainsQuoteInMiddleErrror: ${e}`),this.name="TokenContainsQuoteInMiddleErrror",Object.setPrototypeOf(this,new.target.prototype)}}class V extends Error{constructor(e){super(`CommandContainsUnpairedQuoteError: ${e}`),this.name="CommandContainsUnpairedQuoteError",Object.setPrototypeOf(this,new.target.prototype)}}class Y extends Error{constructor(e){super(`UnexpectedError: ${e}`),this.name="UnexpectedError",Object.setPrototypeOf(this,new.target.prototype)}}class w extends Error{constructor(t){super(`UndefinedCommandError: ${t}`);a(this,"command");this.name="UndefinedCommandError",this.command=t,Object.setPrototypeOf(this,new.target.prototype)}}class O{}const g=/^-{1,2}([^\s]+)/;function N(r){const e=[],t={};for(let o=0;o<r.length;o++)if(g.test(r[o]))if(o+1>=r.length||g.test(r[o+1])){const n=g.exec(r[o])[1];e.push(n),r.splice(o,1),o-=1}else{const n=g.exec(r[o])[1];t[n]=r[o+1],r.splice(o,2),o-=2}return{flags:e,options:t,remainingTokens:r}}class J extends Error{constructor(t){super(`InvalidFlagError: ${t}`);a(this,"flagName");this.name="InvalidFlagError",this.flagName=t,Object.setPrototypeOf(this,new.target.prototype)}}class X extends Error{constructor(t){super(`InvalidOptionError: ${t}`);a(this,"optionName");this.optionName=t,this.name="InvalidOptionError",Object.setPrototypeOf(this,new.target.prototype)}}class P extends Error{constructor(t){super(`InvalidColorError: ${t}`);a(this,"color");this.color=t,this.name="InvalidColorError",Object.setPrototypeOf(this,new.target.prototype)}}class j extends Error{constructor(t){super(`InvalidOperationError: ${t}`);a(this,"operation");this.operation=t,this.name="InvalidOperationError",Object.setPrototypeOf(this,new.target.prototype)}}class b extends Error{constructor(t){super(`InvalidNumberError: ${t}`);a(this,"num");this.num=t,this.name="InvalidNumberError",Object.setPrototypeOf(this,new.target.prototype)}}class v extends Error{constructor(t,o){super();a(this,"expected");a(this,"got");this.expected=t,this.got=o,this.name="IncorrectArgumentsCount",Object.setPrototypeOf(this,new.target.prototype)}}class Z extends O{constructor(){super(...arguments);a(this,"name","echo");a(this,"flags",["r","reverse"]);a(this,"options",["colors","l","loop"])}execute(t){try{this.__execute(t)}catch(o){this.handleErrors(o)}}info(){return["display a line of text"]}usage(){return["	echo [SHORT-OPTION]... [STRING]...","	echo LONG-OPTION"]}__execute(t){const o=N(t);let n=o.remainingTokens.join(" ");for(let s of o.flags)switch(s){case"r":{n=c(n,l.red);break}case"reverse":{n=[...n].reverse().join("");break}default:throw new J(s)}for(let s in o.options)switch(s){case"color":{const i=o.options.color;if(!(i in l))throw new P(i);n=c(n,i);break}case"l":case"loop":{const i=Number(o.options.l||o.options.loop);if(console.log(i),Number.isNaN(i))throw new b(o.options.l||o.options.loop);n=new Array(i).fill(n);break}default:throw new X(s)}u.printToTerminal(p.standardTerminalOutput(n))}handleErrors(t){if(t instanceof P){u.standardErrorOutput([`InvalidColorError: Color (${t.color}) does not exsists`,`valid colors only include ${Object.values(l).join(", ")}`]);return}else if(t instanceof b){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${c(t.num,l.yellow_light)}. Enter a valid number`]);return}else return}}class ee extends O{constructor(){super(...arguments);a(this,"name","help");a(this,"flags",["u","usage","i","info"]);a(this,"options",["cmd"])}execute(t){try{this.__execute(t);return}catch(o){this.handleErrors(o);return}}info(){return["Display information about builtin commands, or used to list all avaialable commands","Options","	--usage | -u	 Shows usage info for provided command "]}usage(){return["help [--cmd] [COMMAND_NAME] [-u | --usage][-i | --info]","eg","	help [--cmd] echo -> info for echo","	help echo --usage -> usage for echo","	help -> lists all avaialable commands"]}__execute(t){const o=N(t);console.log("help");let n;if("cmd"in o.options)console.log("help"),n=o.options.cmd;else{if(o.remainingTokens.length>1)throw new v(1,o.remainingTokens.length);n=o.remainingTokens[0]||"help"}const s=L(n);if(s==null)throw new w(n);const i=new s;if(console.log(o.flags),o.flags.includes("i")||o.flags.includes("info")){console.log("printing info"),u.printToTerminal(p.standardTerminalOutput([c(i.name,l.blue_light),...i.info()]));return}else if(o.flags.includes("u")||o.flags.includes("usage")){u.printToTerminal(p.standardTerminalOutput([c(i.name,l.blue_light),...i.usage()]));return}else{u.printToTerminal(p.standardTerminalOutput([c(i.name,l.blue_light),...i.info(),...i.usage()]));return}}handleErrors(t){if(t instanceof w){u.standardErrorOutput([`UndefinedCommandError: Command ${c(t.command,l.yellow_light)} does not exsits!`]);return}else t instanceof v?u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${c(t.expected.toString(),l.yellow_light)} arguemnts, passed were ${c(t.got.toString(),l.yellow_light)}.`]):u.standardErrorOutput([t.toString()])}}class te extends O{constructor(){super(...arguments);a(this,"name","clear");a(this,"flags",[]);a(this,"options",[])}execute(t){try{f.innerHTML="",E.value="";return}catch(o){this.handleErrors(o)}}info(){return[`${c("clear",l.blue_cool)}: clears terminal screen`]}usage(){return[`${c("clear",l.blue_cool)}`]}handleErrors(t){u.standardErrorOutput(["How even did this command raise an error ???",t.name])}}class re extends O{constructor(){super(...arguments);a(this,"name","math");a(this,"subcommands",["add","sub","mul","div"]);a(this,"flags",[]);a(this,"options",["out","o"])}execute(t){try{this.__execute(t)}catch(o){this.handleErrors(o);return}}info(){return["TODO"]}usage(){return["TODO"]}__execute(t){const o=t.splice(0,1)[0],n=N(t),s=n.remainingTokens.map(d=>{const h=Number(d);if(isNaN(h))throw new b(d);return h});let i;switch(o){case"add":{i=0;for(let d=0;d<s.length;d++)i+=s[d];break}case"sub":{i=0;for(let d=0;d<s.length;d++)i-=s[d];break}case"mul":{i=1;for(let d=0;d<s.length;d++)i*=s[d];break}case"div":{if(s.length>2)throw new v(2,s.length);i=s[0]/s[1];break}default:throw new j(o)}if("out"in n.options||"o"in n.options){const h=n.options.out||n.options.o||"math_result";m.globals.vars.set(h,i.toString()),u.printToTerminal(p.standardTerminalOutput(`Result saved to var ${c(h,l.yellow_light)}.`));return}else{u.printToTerminal(p.standardTerminalOutput(c(i.toString(),l.yellow_light)));return}}handleErrors(t){if(t instanceof b||t.name==="InvalidNumberError"){u.standardErrorOutput([`InvalidNumberError: Error in parsing ${c(t.num,l.yellow_light)}. Enter a valid number`]);return}else t instanceof j?u.standardErrorOutput([`InvalidOperationError: Operation ${c(t.operation,l.yellow_light)} is unsupported.`,`Valid operations include ${c(this.subcommands.join(", "),l.yellow_light)}.`]):t instanceof v&&u.standardErrorOutput([`IncorrectArguemntsCountError: Command expects ${c(t.expected.toString(),l.yellow_light)} arguemnts, passed were ${c(t.got.toString(),l.yellow_light)}.`])}}const oe=new Map([["echo",Z],["help",ee],["clear",te],["math",re]]);function L(r){return oe.get(r)}function ne(r){if(r.type=="variable-assignment"&&r.tokens){console.log("va "),se(r.tokens);return}else if(r.type=="command"&&r.command&&r.tokens){const e=L(r.command);if(e===void 0)throw new w(r.command);new e().execute(r.tokens);return}else throw new Y(r.toString())}function se(r){if(console.log("in here"),r.length>3)throw new x("");const e=T.exec(r[0])[1],t=r[2];m.globals.vars.set(e,t),u.printToTerminal(p.standardTerminalOutput("variable set"))}function M(r){return new RegExp(`(?<!\\\\)^[\\'\\"]`).test(r)}function ie(r){for(let e=1;e<r.length-1;e++){const t=r[e],o=r[e-1];if((t==='"'||t==="'")&&o!=="\\")return!0}return!1}function D(r){return new RegExp(`(?<!\\\\)[\\'\\"]$`).test(r)}function ae(r){let e="",t,o=!0,n=[],s=[];if(M(r))throw new A(r);const i=r.split(" ").filter(Boolean);for(let d=0;d<i.length;d++){if(e=i[d],t==null&&ie(e))throw new U(e);t==null&&o==!0&&M(e)?(t=e[0],o=!1,D(e)&&e.endsWith(t)?(t=void 0,o=!0,n.push(e.slice(1,-1))):s.push(e.slice(1))):t!=null&&o==!1&&D(e)&&e.endsWith(t)?(t=void 0,o=!0,s.push(e.slice(0,-1)),n.push(s.join(" ")),s=[]):t!=null&&o==!1?s.push(e):n.push(e)}if(o==!1)throw console.log("unpaired quote"),new V(r);return n}class le{constructor(e){a(this,"filesystem");a(this,"currentDirectory");this.filesystem=e.initialStructure,this.currentDirectory=e.initialDirectory||"/"}}class ce{constructor(e){a(this,"username");this.username=e}}class ue{constructor(e){a(this,"variables");this.variables=e||new Map}get(e){return this.variables.get(e)}set(e,t){this.variables.set(e,t.toString())}}class de{constructor(){a(this,"fs");a(this,"vars");a(this,"user");this.fs=new le({initialStructure:{name:"/",type:"directory",parent:null,children:[]},initialDirectory:"/"}),this.user=new ce("divij@ubuntu"),this.vars=new ue}}function pe(r){return r.split("/").filter(Boolean)}class y{static createDirectory(e,t,o=!1){if(e.type=="file")throw new I(`${e.name} is a file`);if(e.children.some(i=>i.name===t)&&o==!1)throw new $(t);const s={name:t,parent:e,type:"directory",children:[]};return e.children.push(s),s}static createDirectoryByPath(e,t,o=!1){const n=e.split("/").filter(Boolean);console.log(n),o=!o;let s=t;for(const i of n)s=this.createDirectory(s,i);return s}static createFile(e,t,o="",n=!1){if(e.type=="file")throw new I(`${e.name} is a file`);if(e.children.some(d=>d.name===t)&&n==!1)throw new $(t);const i={name:t,parent:e,content:o,type:"file"};return e.children.push(i),i}static traverseAndList(e,t=1/0,o=0,n=""){return e.name+q(e,t,o,n)}static getNodeByPath(e,t){const o=pe(e);return me(o,t)}static getPathFromNode(e){const t=[];let o=e;for(;o!=null;)t.push(o.name.trim()),o=o==null?void 0:o.parent;return t.reverse().filter(Boolean).join("/")}}function q(r,e,t=0,o=""){if(t>e)return o;if(r.type==="file")throw new R(`${r.name} is a file`);const n=`
 `+"|  ".repeat(t)+"|-- ";for(const s of r.children)s.type==="directory"?(o+=n+s.name,o=q(s,e,t+1,o)):o+=n+s.name;return o}function me(r,e){let t=e;for(let o of r){t.type;const n=t.children.find(s=>s.name===o);if(!n)return;t=n}return t}class F{static getUserInput(){return E.innerText}static clearUserInput(){E.innerText=""}}const he="true";class fe{constructor(){a(this,"globals");this.globals=new de,this.globals.vars.set("__debug",he),this.globals.vars.set("ping","pong"),this.globals.vars.set("username","divij");const e=y.createDirectoryByPath("/temp/content",this.globals.fs.filesystem);y.createFile(e,"test.txt","Hello World!");const t=y.createDirectoryByPath("/home/",this.globals.fs.filesystem);y.createFile(t,"info.txt","Linux Bash terminal Emulated purely on browser")}process(){const e=F.getUserInput();u.printToTerminal(p.userInputPreview(e)),F.clearUserInput(),_();let t=[];try{t=ae(e)}catch(n){Ee(n,e);return}let o;try{o=G(t)}catch(n){ye(n);return}try{ne(o)}catch(n){ge(n);return}}}function ge(r){console.log(r),console.log(r instanceof x),console.log(r.constructor.name),console.log(Object.getPrototypeOf(r)),r instanceof x||r.name==="VariableValueIsMultipleWords"?u.standardErrorOutput(["VariableValueIsMultipleWords: variables cannot be set values as multiple tokens, pass multiple words in quotations as single token."]):r instanceof w&&u.standardErrorOutput([`UndefinedCommandError: Command ${c(r.command,l.yellow_light)} does not exsits!`])}function ye(r){r instanceof k&&u.standardErrorOutput([`VariableDoesNotExistsError: Variable with name ${r.varName} does not exists !`])}function Ee(r,e){if(r instanceof A){u.standardErrorOutput(["TokenizationError: Command starts with quotations",`${c(e,l.yellow_light)}, cannot start with quotations`]);return}else if(r instanceof U){const t=/(?:\w+\s+)?\w+[\'\"]\w+(?:\s+\w+)?/i.exec(e)[0];u.standardErrorOutput(["TokenizationError: Command contains quote in middle",`Error at ${c(t,l.yellow_light)} in command ${e}`]);return}else if(r instanceof V){u.standardErrorOutput(["TokenizationError: Command contains unpaired quote",c("TODO: BEAUTIFY",l.yellow_light)]);return}else{u.standardErrorOutput(["unexpected error",r]);return}}const m=new fe;_();E.addEventListener("keypress",r=>{r.key=="Enter"&&(r.preventDefault(),m.process(),_())});
